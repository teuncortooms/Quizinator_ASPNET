@using QuizinatorCore.Entities
@model IEnumerable<Quiz>

<h1>Quizzes</h1>

<div>

    <div class="float-left">
        <a asp-action="Create" class="btn btn-primary">Add Quiz</a>
        <a asp-action="Import" class="btn btn-light">Import Quizzes</a>
    </div>
    <div class="float-right">
        <form asp-action="Index" method="get">
            <p>
                <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
                @if (@ViewData["currentFilter"] != null)
                {
                    <a asp-action="Index">x</a>
                }
                <input type="submit" value="Search" class="btn btn-light" />
            </p>
        </form>
    </div>
</div>

<div class="container">
    <table class="table table-hover">
        <thead class="thead-light">
            <tr class="row">
                <th class="col-sm-3">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-searchString="@ViewData["currentFilter"]">
                        @Html.DisplayNameFor(model => model.Title)
                    </a>
                </th>
                <th class="col-sm-3">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["ExercisesSortParm"]" asp-route-searchString="@ViewData["currentFilter"]">
                        Number of exercises
                    </a>
                </th>
                <th class="col-sm-3">
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["CollectionSizeSortParm"]" asp-route-searchString="@ViewData["currentFilter"]">
                        Collection Size
                    </a>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (Quiz quiz in Model)
            {
                <tr class="row">
                    <td class="col-sm-4">
                        @Html.DisplayFor(modelItem => quiz.Title)
                    </td>
                    <td class="col-sm-2">
                        @Html.DisplayFor(modelItem => quiz.Exercises.Count)
                    </td>
                    <td class="col-sm-2">
                        @Html.DisplayFor(modelItem => quiz.IdiomsCollection.Count)
                    </td>
                    <td class="col-sm-1">
                        <a asp-action="Edit" asp-route-id=@quiz.QuizId><i class="fas fa-edit"></i></a>
                        <a asp-action="Details" asp-route-id=@quiz.QuizId><i class="fas fa-info-circle"></i></a>
                        <a asp-action="Delete" asp-route-id=@quiz.QuizId><i class="fas fa-trash"></i></a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>