@model AnotherMVCProject.Models.IdiomsListViewModel

@{
    ViewData["Title"] = "IdiomsList";
}

<h1>IdiomsList</h1>

<p>
    @Html.ActionLink("Add Idiom", "Create") |
    @Html.ActionLink("Import Idioms", "Import")
</p>
<div class="container">
    <div class="row">
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Idioms.First().Word)
        </div>
        <div class="col-md">
            @Html.DisplayNameFor(model => model.Idioms.First().Sentence)
        </div>
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Idioms.First().Translation)
        </div>
        <div class="col-md-2">
            @Html.DisplayNameFor(model => model.Idioms.First().Unit)
        </div>
        <div class="col-md-2">
        </div>
    </div>


    @foreach (var item in Model.Idioms)
    {
<div class="row">
    @*<div class="col-md-2">
            @Html.DisplayFor(modelItem => item.IdiomId)
        </div>*@
    <div class="col-md-2">
        @Html.DisplayFor(modelItem => item.Word)
    </div>
    <div class="col-md">
        @Html.DisplayFor(modelItem => item.Sentence)
    </div>
    <div class="col-md-2">
        @Html.DisplayFor(modelItem => item.Translation)
    </div>
    <div class="col-md-2">
        @Html.DisplayFor(modelItem => item.Unit)
    </div>
    <div class="col-md-2">
        @Html.ActionLink("Edit", "Edit", new { id = item.IdiomId }) |
        @Html.ActionLink("Details", "Details", new { id = item.IdiomId }) |
        @Html.ActionLink("Delete", "Delete", new { id = item.IdiomId })
    </div>
</div>
    }
</div>
